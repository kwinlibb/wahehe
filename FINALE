using System;
using System.Net;
using System.Net.Http.Headers;
using System.Reflection;

namespace HotelBookingProgram
{
    class Program
    {
        static Dictionary<string, string> accounts = new Dictionary<string, string>();
   
        static int currentpage = 0;
        public static string? address, contactNumber , emailAddress , realRoom ;

        public static string[] name = new string [25] ;

        public static string[] branch = new string[25];
        public static    int[] chosenDate = new int[25];
        public static    string[] room = new string[25];
        public static    int[] selectedRoom = new int[25];
         
        public static   int[] total = new int[25];
        public static   string[] paymentmeth = new string[25];

        public static DateTime[] startDate = new DateTime [25];
        public static DateTime[] endDate = new DateTime [25];
        public static int age;
        public static int [] adultno = new int [25];
        public static int SS = 500 , MS = 800 , BS = 1000 , HS = 1500 , PS = 2000 ;
        public static int costperday ;
        public static int  index = 0 ;
        public static int[] daysDifference = new int [25] ;   
        public static void Main(string[] args)
        {
            
        
            char retry;
            do
            {

                index++;

                Welcome ();  

                homepage();  

                Welcome ();

                Basicinfo ();

                ShowBranch (); // readkey

                ChooseBranch (); 


                RoomType () ; // dapat lumabas lahat ng options sa speicific na occupants - rhei


                RoomNum () ; // gagawin ni queen ; reservation

                DateAndCost () ; // lalagyan ng design at design


                Payment () ; // confirmation if he wants to save it ot not , confirm bago payment

                bookingdetails () ; // catch n brek ako
               

                Console.Write("Do you want to book another room? (y/n): ");
                retry = char.Parse(Console.ReadLine());
            }while(retry == 'y');

        if (retry != 'n');
        {
            showguidelines();
        }
            
        }
        static string paymentMethod()
        {
            Console.Clear();
            
            Console.WriteLine("1. Card");
            Console.WriteLine("2. Gcash");
            Console.WriteLine("3. Paypal");

            Console.Write("Select Payment Method: ");

            int choice = int.Parse(Console.ReadLine());
            do {
                Console.Write("Enter the number of your payment method choice: ");
            }
            while (choice < 1 || choice > 3);

            switch (choice)
            { 
                case 1:
                    return "Card";
                case 2: 
                    return "Gcash";
                case 3:
                    return "Paypal";
                default:
                    return string.Empty;
            }
        }
        
        static void Cardpayment(double total)
        {
            Console.Clear();
            Console.WriteLine("Payment Details: ");
            Console.Write("Enter your MPIN: ");
            string creditcardnumber = Console.ReadLine();

            Console.WriteLine($"Credit Card successful! Total amount charged: P{total:F2}\n");
            Console.ReadKey();
        }

        static void Paypalpayment(double total)
        {
            Console.Clear();
            Console.WriteLine("Payment Details:");
            Console.Write("Enter your PayPal email address: ");
            string paypalEmail = Console.ReadLine();

            Console.WriteLine($"PayPal Payment successful! Total amount charged: P{total:F2}\n");
            Console.ReadKey();
        }

        static void gcashpayment(double total)
        {
            Console.Clear();
            Console.WriteLine("Payment Details:");
            Console.Write("Enter your name: ");
            string gcashname = Console.ReadLine();
            Console.Write("\nEnter your GCash mobile number: ");
            string gcashNumber = Console.ReadLine();

            Console.WriteLine($"GCash Payment successful! Total amount charged: P{total:F2}\n");
            Console.ReadKey();
        }

    static void showguidelines()
        {
            Console.Clear();

            Console.WriteLine("\nHere are some guidelines to make your stay enjoyable:");
            Console.WriteLine("\n- The tariff is for the room only and is exclusive of any government taxes applicable Meals and other services are available at extra cost. To know your room tariff, please contact the Duty Manager, guest registration forms must be signed on arrivals.");
            Console.WriteLine("- Bills must be settled on presentation, personal cheques are not accepted..");
            Console.WriteLine("- You can only bring 2 children per room.");
            Console.WriteLine("- In the case of default in the payment of dues by a guest, the management shall have the linen on their luggage and belongings, and be entitled to detain the same and to sell or auction such property at any time without reference to the guest. The net sale proceeds will be appropriate towards the amount due by the guest without prejudice to the management's rights to adopt such further recovery proceedings as my be required.");
            Console.WriteLine("- Please present your ID card, Passport or Temporary Residence Card upon Check-in. By Law visitors must present personal documents for hotel records. These documents will be returned upon departure.");
            Console.WriteLine("- Check out time is ( mention your checkout time here ) please inform the reception if you wish to retain your room beyond this time. The extension will be given depending on the availability. If the room is available, the normal tariff will be charged. On failure of the guest to vacate the room on expiry or period the management shall have the right to remove the guest and his/her belongings from the room occupied by the Guest.");
            Console.WriteLine("- Subject to availability of the storage space, the guest can store luggage in the luggage room, at the guest's sole risk as to loss or damage from any cause, Luggage may not be stored for a period of over 30 days.");

            Console.WriteLine("\nThank you for choosing Morada Grand Royal Hotel, have a nice stay!\n");
        }


    static void SignUp()
    {
        Console.Clear();
        Console.WriteLine("Welcome! Let's create an account.");

        while (true)
        {
            Console.Write("Please enter your age: ");
            if (int.TryParse(Console.ReadLine(), out int age))
            {
                if (age >= 18)
                {
                    Console.WriteLine("You are eligible to create an account.");
                    break; // Exit the loop when the input is valid
                }
                else
                {
                    Console.WriteLine("You must be 18 years or older to create an account.");
                    Console.ReadKey();
                    homepage();
                    break; // Exit the loop after displaying the message
                }
            }
            else
            {
                Console.WriteLine("Invalid input. Please enter a valid age.");
            }
        }

        Console.Write("Please enter a new username:");
        string newUsername = Console.ReadLine();

        while (string.IsNullOrEmpty(newUsername)) // Ensures the username is not empty
        {
            Console.WriteLine("Username cannot be empty. Please enter a valid username:");
            newUsername = Console.ReadLine();
        }

        Console.Write("Please enter a password:");
        string newPassword = Console.ReadLine();

        while (string.IsNullOrEmpty(newPassword)) // Ensures the password is not empty
        {
            Console.WriteLine("Password cannot be empty. Please enter a valid password:");
            newPassword = Console.ReadLine();
        }

        AddAccount(newUsername, newPassword);

        Console.WriteLine("Account created successfully!");

        homepage();

        // Login using the newly created account
        
    }

    static void AddAccount(string username, string password)
    {
        if (!accounts.ContainsKey(username))
        {
            accounts.Add(username, password);
        }
        else
        {
            Console.WriteLine("Account already exists. Please choose a different username.");
        }
    }

    static void LoginProcess()
    {
        Console.Clear();
        Console.WriteLine("\nPlease login to your account.");

        Console.WriteLine("Enter your username:");
        string enteredUsername = Console.ReadLine();

        Console.WriteLine("Enter your password:");
        string enteredPassword = Console.ReadLine();

       
        if (Login(enteredUsername, enteredPassword))
        {
            Console.WriteLine("Login successful!");
            // Add your logic here for what happens after successful login
        }
        else
        {
            Console.WriteLine("Invalid username or password. We will now redirect you to the Home page.");
            Console.ReadKey();
            homepage();
        }
    }

    static bool Login(string username, string password)
        {
            return accounts.ContainsKey(username) && accounts[username] == password;
        }

    static void homepage()
        {
            Console.WriteLine("How can we help you?");

            bool validChoice = false;

            Console.WriteLine("\n\n\nNavigation Options:");
            Console.WriteLine("1. Login");
            Console.WriteLine("2. Sign Up");

            Console.Write("What do you want to do: ");

            while (!validChoice)
            {

                if (int.TryParse(Console.ReadLine(), out int homeChoice))
                {
                    switch (homeChoice)
                    {
                        case 1:
                            LoginProcess();
                            validChoice = true;
                            break;
                        case 2:
                            SignUp();
                            validChoice = true;
                            break;
                        default:
                            Console.WriteLine("Invalid choice. Please enter 1 or 2.");
                            break;
                    }
                }
                else
                {
                    Console.Write("Invalid input. Please enter a number: ");
                }
            }
        }
        static void checkin()
            {
                Console.WriteLine();
                Console.WriteLine("******************************************");
                Console.WriteLine("*               Date of Stay             *");
                Console.WriteLine("******************************************");

                Console.Write("Check-in date (yyyy-MM-dd): ");
                DateTime startDate = GetValidDateInput();

                Console.Write("Check-out date (yyyy-MM-dd): ");
                DateTime endDate = GetValidDateInput();

                int daysDifference = (int)(endDate - startDate).TotalDays;
                Console.WriteLine($"You will be staying for {daysDifference} days.");
            }

        static DateTime GetValidDateInput()
            {
                DateTime date;
                string input;

                do
                {
                    Console.Write("Enter a valid date (yyyy-MM-dd): ");
                    input = Console.ReadLine();

                    if (!DateTime.TryParseExact(input, "yyyy-MM-dd", null, System.Globalization.DateTimeStyles.None, out date))
                    {
                        Console.WriteLine("Invalid input. Please enter a valid date in the format yyyy-MM-dd.");
                    }

                } while (date == DateTime.MinValue);

                return date;
            
            }
        static void Welcome ()
           {
                Console.Clear();
                        Console.ForegroundColor = ConsoleColor.Yellow;

                        Console.WriteLine("*************************************************");
                        Console.WriteLine("*                                               *");
                        Console.WriteLine("*     Welcome to Morada Grand Royal Hotel!      *");
                        Console.WriteLine("*                                               *");
                        Console.WriteLine("*************************************************");
                        Console.ResetColor();
            }
        public static void Basicinfo ()
            {
                Console.Write("Please enter your name: ");
                        name [index - 1] = Console.ReadLine();
                        
                        Console.Write("Please enter your contact number: ");
                        contactNumber = Console.ReadLine();

                        Console.Write("Please enter your email address: ");
                        emailAddress = Console.ReadLine();
            }
        static void ShowBranch ()
            {
                Console.Clear();

                        Console.WriteLine();
                        Console.WriteLine("These are our branches inside Laguna");
                        Console.WriteLine();
                        Console.WriteLine("Codes\t        Branch Names");
                        Console.WriteLine("------------\t-------------");
                        Console.WriteLine("SR\t\tSta. Rosa");
                        Console.WriteLine("BAE\t\tBae");
                        Console.WriteLine("SC\t\tSta. Cruz");
                        Console.WriteLine("SP\t\tSan Pablo");
                        Console.WriteLine("LB\t\tLos Banos");
            }
        public static void ChooseBranch ()
            {
                bool validBranch = false; 

                        

                        do 
                        {

                        Console.Write("To choose your designated branch, just enter it's code : ");
                        branch [index -1]= Console.ReadLine().ToUpper();
                

                        switch (branch [index -1])
                        {
                        case "SR":
                            Console.WriteLine("You selected Sta. Rosa.");
                            validBranch = true ;
                            break;
                        case "BAE":
                            Console.WriteLine("You selected Bae.");
                            validBranch = true ;
                            break;
                        case "SC":
                            Console.WriteLine("You selected Sta. Cruz.");
                            validBranch = true ;
                            break;
                        case "SP":
                            Console.WriteLine("You selected San Pablo.");
                            validBranch = true ;
                            break;
                        case "LB":
                            Console.WriteLine("You selected Los Banos.");
                            validBranch = true ;
                            break;
                        default:
                            Console.WriteLine("Wrong code, please only enter the available code");
                            break;

                        }

                        } 
                        while (!validBranch);
            }

       
              
            
        
        public static void RoomType ()
            {
            Console.Clear();
                        Console.WriteLine();
                        Console.WriteLine("******************************************");
                        Console.WriteLine("*          Guest and Room                *");
                        Console.WriteLine("******************************************");

                        Console.WriteLine();
                        

                       bool validroom = false;

do
{
    Console.Write("Enter the number of occupants: ");
    adultno [index-1] = int.Parse(Console.ReadLine());

    if (adultno[index-1] <= 0)
    {
        Console.WriteLine("Number of occupants must be greater than 0.");
        continue;
    }

    Console.WriteLine();

    if (adultno[index-1] == 1)
    {
        Console.WriteLine("Here are our offers : \nSS1, SS2, SS3, SS4, SS5 \n Standard Suites (500 php per head for 24hrs)");
        //... (rest of the Standard Suite details)
    }
    else if (adultno[index-1] <= 3)
    {
        Console.WriteLine("MS1, MS2, MS3, MS4, MS5 \n Mini Suite (800 php per head for 24hrs)");
        //... (rest of the Mini Suite details)
    }
    else if (adultno[index-1] <= 4)
    {
        Console.WriteLine("BS1, BS2, BS3, BS4, BS5 \n Bridal Suites (1000 php per head for 24hrs)");
        //... (rest of the Bridal Suite details)
    }
    else if (adultno[index-1] <= 5)
    {
        Console.WriteLine("HS1, HS2, HS3, HS4, HS5 \n Honeymoon Suite (1500 php per head for 24hrs)");
        //... (rest of the Honeymoon Suite details)
    }
    else
    {
        Console.WriteLine("Room cannot exceed more than 5 occupants.");
        continue; // Restart the loop for a valid input
    }

    Console.Write("Enter the code of the room that you choose: ");
                        room [index-1]= Console.ReadLine().ToUpper();

                        switch (room[index - 1])
                        {
                            case "SS":
                                Console.WriteLine("You selected Standard Suite");
                                costperday = SS;
                                validroom = true;
                                break;
                            case "MS":
                                Console.WriteLine("You selected Mini Suite.");
                                costperday = MS;
                                validroom = true;
                                break;
                            case "BS":
                                Console.WriteLine("You selected Bridal Suites.");
                                costperday = BS;
                                validroom = true;
                                break;
                            case "HS":
                                Console.WriteLine("You selected Honeymoon Suite.");
                                costperday = HS;
                                validroom = true;
                                break;

                            default:
                                Console.WriteLine("Wrong code, please only enter the available code");
                                break;

                        }
                    }
                    while (!validroom);


Console.ReadKey();
                            
            }
        public static void RoomNum ()
            {
            Console.Clear();
                        
                        
                            Console.WriteLine($"The selected room type has 5 available rooms.");

                            
                            bool isValidRoom = false;

                            while (!isValidRoom)
                            {
                            Console.Write("\nChoose a room number from 1-5:");
                            string input = Console.ReadLine();

                            if (int.TryParse(input, out selectedRoom [index-1]))
                            {
                                if (selectedRoom[index-1] >= 1 && selectedRoom[index-1]<= 5)
                                {
                                    isValidRoom = true;
                                }
                                else
                                {
                                    Console.Write("Invalid input. Please choose a room number from 1-5: ");
                                }
                            }
                            else
                            {
                                Console.Write("Invalid input. Please enter a numeric value: ");
                            }
                            
                        }
                    
                        Console.WriteLine($"You selected room {selectedRoom} of {room}.");
            }
        public static void DateAndCost ()
            {
            Console.Clear();

                        Console.WriteLine();
                        Console.WriteLine("******************************************");
                        Console.WriteLine("*               Date of Stay             *");
                        Console.WriteLine("******************************************");

                        Console.Write("Check-in date (yyyy-MM-dd): ");
                       startDate [index-1] = GetValidDateInput();

                        Console.Write("Check-out date (yyyy-MM-dd): ");
                        endDate [index-1] = GetValidDateInput();

                        daysDifference[index-1] = (int)(endDate[index-1] - startDate[index-1]).TotalDays;
                        Console.WriteLine($"You will be staying for {daysDifference[index-1]} days.");

                    total [index -1]= adultno [index -1] * (daysDifference[index-1]  * costperday) ;

                    Console.WriteLine($"The total cost for {room[index-1]} with {daysDifference[index-1]} number of days and {adultno[index-1]} residents is : P" + total[index-1]);

                        Console.ReadKey();

            }
         public static void bookingdetails ()
            {
                Console.Clear();

                 for (int i = 0; i < index; i++)
                 {
                  
                    
                        Console.WriteLine("Your book to Morada Grand Royal Hotel is accepted! \nBooking Details :");
                        Console.WriteLine($"Book #{i + 1} : ");
                        Console.WriteLine("Name: " + name[i]);
                        Console.WriteLine("Laguna Branch: " + branch[i]);
                        Console.WriteLine("Check-in Date: " + startDate[i]);
                        Console.WriteLine("Check-out Date: " + endDate[i]);
                        Console.WriteLine("Days to stay: " + daysDifference[i]);
                        Console.WriteLine("Room Choice: " + room[i] + selectedRoom[i]);
                        Console.WriteLine("Residents: " + adultno[i]);
                        Console.WriteLine("Total Cost: " + total[i]);
                        Console.WriteLine("Payment method: " + paymentmeth[i]);
                 }
                    

            }

        public static void Payment ()
            {
                paymentmeth [index-1]= paymentMethod();

                        if (paymentmeth[index-1] == "Card")
                        {
                            Cardpayment(total[index-1]);
                        } 
                        else if (paymentmeth[index-1] == "Gcash"){
                            gcashpayment(total[index-1]);
                        }
                        else if (paymentmeth [index-1]== "Paypal"){
                            Paypalpayment(total[index-1]);
                        }

            }
       
    }
}
